//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadatos de relaciones en EDM

[assembly: EdmRelationshipAttribute("CSAdminBDModel", "FK_Contratos_Equipos", "Equipos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSAdminApp.Clases.Equipos), "Contratos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSAdminApp.Clases.Contratos), true)]
[assembly: EdmRelationshipAttribute("CSAdminBDModel", "FK_Contratos_Funciones", "Funciones", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSAdminApp.Clases.Funciones), "Contratos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSAdminApp.Clases.Contratos), true)]
[assembly: EdmRelationshipAttribute("CSAdminBDModel", "FK_Contratos_Personas", "Personas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSAdminApp.Clases.Personas), "Contratos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSAdminApp.Clases.Contratos), true)]
[assembly: EdmRelationshipAttribute("CSAdminBDModel", "FK_Contratos_SituacionesProfesionales", "SituacionesProfesionales", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSAdminApp.Clases.SituacionesProfesionales), "Contratos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSAdminApp.Clases.Contratos), true)]
[assembly: EdmRelationshipAttribute("CSAdminBDModel", "FK_Equipos_Localidades", "Localidades", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSAdminApp.Clases.Localidades), "Equipos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSAdminApp.Clases.Equipos), true)]
[assembly: EdmRelationshipAttribute("CSAdminBDModel", "FK_Equipos_Personas", "Personas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSAdminApp.Clases.Personas), "Equipos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSAdminApp.Clases.Equipos), true)]
[assembly: EdmRelationshipAttribute("CSAdminBDModel", "FK_Inasistencias_Personas", "Personas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSAdminApp.Clases.Personas), "Inasistencias", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSAdminApp.Clases.Inasistencias), true)]
[assembly: EdmRelationshipAttribute("CSAdminBDModel", "FK_PersonasTel_Personas", "Personas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSAdminApp.Clases.Personas), "PersonasTel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CSAdminApp.Clases.PersonasTel), true)]
[assembly: EdmRelationshipAttribute("CSAdminBDModel", "FK_Usuarios_Personas", "Personas", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CSAdminApp.Clases.Personas), "Usuarios", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CSAdminApp.Clases.Usuarios), true)]

#endregion

namespace CSAdminApp.Clases
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class CSAdminBDEntities : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto CSAdminBDEntities usando la cadena de conexión encontrada en la sección 'CSAdminBDEntities' del archivo de configuración de la aplicación.
        /// </summary>
        public CSAdminBDEntities() : base("name=CSAdminBDEntities", "CSAdminBDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto CSAdminBDEntities.
        /// </summary>
        public CSAdminBDEntities(string connectionString) : base(connectionString, "CSAdminBDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto CSAdminBDEntities.
        /// </summary>
        public CSAdminBDEntities(EntityConnection connection) : base(connection, "CSAdminBDEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Contratos> Contratos
        {
            get
            {
                if ((_Contratos == null))
                {
                    _Contratos = base.CreateObjectSet<Contratos>("Contratos");
                }
                return _Contratos;
            }
        }
        private ObjectSet<Contratos> _Contratos;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Equipos> Equipos
        {
            get
            {
                if ((_Equipos == null))
                {
                    _Equipos = base.CreateObjectSet<Equipos>("Equipos");
                }
                return _Equipos;
            }
        }
        private ObjectSet<Equipos> _Equipos;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Funciones> Funciones
        {
            get
            {
                if ((_Funciones == null))
                {
                    _Funciones = base.CreateObjectSet<Funciones>("Funciones");
                }
                return _Funciones;
            }
        }
        private ObjectSet<Funciones> _Funciones;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Inasistencias> Inasistencias
        {
            get
            {
                if ((_Inasistencias == null))
                {
                    _Inasistencias = base.CreateObjectSet<Inasistencias>("Inasistencias");
                }
                return _Inasistencias;
            }
        }
        private ObjectSet<Inasistencias> _Inasistencias;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Localidades> Localidades
        {
            get
            {
                if ((_Localidades == null))
                {
                    _Localidades = base.CreateObjectSet<Localidades>("Localidades");
                }
                return _Localidades;
            }
        }
        private ObjectSet<Localidades> _Localidades;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Personas> Personas
        {
            get
            {
                if ((_Personas == null))
                {
                    _Personas = base.CreateObjectSet<Personas>("Personas");
                }
                return _Personas;
            }
        }
        private ObjectSet<Personas> _Personas;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<PersonasTel> PersonasTel
        {
            get
            {
                if ((_PersonasTel == null))
                {
                    _PersonasTel = base.CreateObjectSet<PersonasTel>("PersonasTel");
                }
                return _PersonasTel;
            }
        }
        private ObjectSet<PersonasTel> _PersonasTel;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<SituacionesProfesionales> SituacionesProfesionales
        {
            get
            {
                if ((_SituacionesProfesionales == null))
                {
                    _SituacionesProfesionales = base.CreateObjectSet<SituacionesProfesionales>("SituacionesProfesionales");
                }
                return _SituacionesProfesionales;
            }
        }
        private ObjectSet<SituacionesProfesionales> _SituacionesProfesionales;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Usuarios> Usuarios
        {
            get
            {
                if ((_Usuarios == null))
                {
                    _Usuarios = base.CreateObjectSet<Usuarios>("Usuarios");
                }
                return _Usuarios;
            }
        }
        private ObjectSet<Usuarios> _Usuarios;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Contratos. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToContratos(Contratos contratos)
        {
            base.AddObject("Contratos", contratos);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Equipos. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToEquipos(Equipos equipos)
        {
            base.AddObject("Equipos", equipos);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Funciones. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToFunciones(Funciones funciones)
        {
            base.AddObject("Funciones", funciones);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Inasistencias. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInasistencias(Inasistencias inasistencias)
        {
            base.AddObject("Inasistencias", inasistencias);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Localidades. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToLocalidades(Localidades localidades)
        {
            base.AddObject("Localidades", localidades);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Personas. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToPersonas(Personas personas)
        {
            base.AddObject("Personas", personas);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet PersonasTel. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToPersonasTel(PersonasTel personasTel)
        {
            base.AddObject("PersonasTel", personasTel);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet SituacionesProfesionales. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToSituacionesProfesionales(SituacionesProfesionales situacionesProfesionales)
        {
            base.AddObject("SituacionesProfesionales", situacionesProfesionales);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Usuarios. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToUsuarios(Usuarios usuarios)
        {
            base.AddObject("Usuarios", usuarios);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSAdminBDModel", Name="Contratos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contratos : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Contratos.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="personaId">Valor inicial de la propiedad PersonaId.</param>
        /// <param name="fechaInicio">Valor inicial de la propiedad FechaInicio.</param>
        /// <param name="origen">Valor inicial de la propiedad Origen.</param>
        /// <param name="cargoId">Valor inicial de la propiedad CargoId.</param>
        /// <param name="condicionId">Valor inicial de la propiedad CondicionId.</param>
        /// <param name="funcionId">Valor inicial de la propiedad FuncionId.</param>
        /// <param name="equipoId">Valor inicial de la propiedad EquipoId.</param>
        /// <param name="horas">Valor inicial de la propiedad Horas.</param>
        public static Contratos CreateContratos(global::System.Int32 id, global::System.Int32 personaId, global::System.DateTime fechaInicio, global::System.String origen, global::System.String cargoId, global::System.String condicionId, global::System.String funcionId, global::System.String equipoId, global::System.Byte horas)
        {
            Contratos contratos = new Contratos();
            contratos.Id = id;
            contratos.PersonaId = personaId;
            contratos.FechaInicio = fechaInicio;
            contratos.Origen = origen;
            contratos.CargoId = cargoId;
            contratos.CondicionId = condicionId;
            contratos.FuncionId = funcionId;
            contratos.EquipoId = equipoId;
            contratos.Horas = horas;
            return contratos;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonaId
        {
            get
            {
                return _PersonaId;
            }
            set
            {
                if (_PersonaId != value)
                {
                    OnPersonaIdChanging(value);
                    ReportPropertyChanging("PersonaId");
                    _PersonaId = StructuralObject.SetValidValue(value, "PersonaId");
                    ReportPropertyChanged("PersonaId");
                    OnPersonaIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonaId;
        partial void OnPersonaIdChanging(global::System.Int32 value);
        partial void OnPersonaIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaInicio
        {
            get
            {
                return _FechaInicio;
            }
            set
            {
                OnFechaInicioChanging(value);
                ReportPropertyChanging("FechaInicio");
                _FechaInicio = StructuralObject.SetValidValue(value, "FechaInicio");
                ReportPropertyChanged("FechaInicio");
                OnFechaInicioChanged();
            }
        }
        private global::System.DateTime _FechaInicio;
        partial void OnFechaInicioChanging(global::System.DateTime value);
        partial void OnFechaInicioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FechaBaja
        {
            get
            {
                return _FechaBaja;
            }
            set
            {
                OnFechaBajaChanging(value);
                ReportPropertyChanging("FechaBaja");
                _FechaBaja = StructuralObject.SetValidValue(value, "FechaBaja");
                ReportPropertyChanged("FechaBaja");
                OnFechaBajaChanged();
            }
        }
        private Nullable<global::System.DateTime> _FechaBaja;
        partial void OnFechaBajaChanging(Nullable<global::System.DateTime> value);
        partial void OnFechaBajaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Origen
        {
            get
            {
                return _Origen;
            }
            set
            {
                OnOrigenChanging(value);
                ReportPropertyChanging("Origen");
                _Origen = StructuralObject.SetValidValue(value, false, "Origen");
                ReportPropertyChanged("Origen");
                OnOrigenChanged();
            }
        }
        private global::System.String _Origen;
        partial void OnOrigenChanging(global::System.String value);
        partial void OnOrigenChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CargoId
        {
            get
            {
                return _CargoId;
            }
            set
            {
                OnCargoIdChanging(value);
                ReportPropertyChanging("CargoId");
                _CargoId = StructuralObject.SetValidValue(value, false, "CargoId");
                ReportPropertyChanged("CargoId");
                OnCargoIdChanged();
            }
        }
        private global::System.String _CargoId;
        partial void OnCargoIdChanging(global::System.String value);
        partial void OnCargoIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CondicionId
        {
            get
            {
                return _CondicionId;
            }
            set
            {
                OnCondicionIdChanging(value);
                ReportPropertyChanging("CondicionId");
                _CondicionId = StructuralObject.SetValidValue(value, false, "CondicionId");
                ReportPropertyChanged("CondicionId");
                OnCondicionIdChanged();
            }
        }
        private global::System.String _CondicionId;
        partial void OnCondicionIdChanging(global::System.String value);
        partial void OnCondicionIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FuncionId
        {
            get
            {
                return _FuncionId;
            }
            set
            {
                OnFuncionIdChanging(value);
                ReportPropertyChanging("FuncionId");
                _FuncionId = StructuralObject.SetValidValue(value, false, "FuncionId");
                ReportPropertyChanged("FuncionId");
                OnFuncionIdChanged();
            }
        }
        private global::System.String _FuncionId;
        partial void OnFuncionIdChanging(global::System.String value);
        partial void OnFuncionIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EquipoId
        {
            get
            {
                return _EquipoId;
            }
            set
            {
                OnEquipoIdChanging(value);
                ReportPropertyChanging("EquipoId");
                _EquipoId = StructuralObject.SetValidValue(value, false, "EquipoId");
                ReportPropertyChanged("EquipoId");
                OnEquipoIdChanged();
            }
        }
        private global::System.String _EquipoId;
        partial void OnEquipoIdChanging(global::System.String value);
        partial void OnEquipoIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Horas
        {
            get
            {
                return _Horas;
            }
            set
            {
                OnHorasChanging(value);
                ReportPropertyChanging("Horas");
                _Horas = StructuralObject.SetValidValue(value, "Horas");
                ReportPropertyChanged("Horas");
                OnHorasChanged();
            }
        }
        private global::System.Byte _Horas;
        partial void OnHorasChanging(global::System.Byte value);
        partial void OnHorasChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observacion
        {
            get
            {
                return _Observacion;
            }
            set
            {
                OnObservacionChanging(value);
                ReportPropertyChanging("Observacion");
                _Observacion = StructuralObject.SetValidValue(value, true, "Observacion");
                ReportPropertyChanged("Observacion");
                OnObservacionChanged();
            }
        }
        private global::System.String _Observacion;
        partial void OnObservacionChanging(global::System.String value);
        partial void OnObservacionChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Contratos_Equipos", "Equipos")]
        public Equipos Equipos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipos>("CSAdminBDModel.FK_Contratos_Equipos", "Equipos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipos>("CSAdminBDModel.FK_Contratos_Equipos", "Equipos").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Equipos> EquiposReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipos>("CSAdminBDModel.FK_Contratos_Equipos", "Equipos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Equipos>("CSAdminBDModel.FK_Contratos_Equipos", "Equipos", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Contratos_Funciones", "Funciones")]
        public Funciones Funciones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funciones>("CSAdminBDModel.FK_Contratos_Funciones", "Funciones").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funciones>("CSAdminBDModel.FK_Contratos_Funciones", "Funciones").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Funciones> FuncionesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funciones>("CSAdminBDModel.FK_Contratos_Funciones", "Funciones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Funciones>("CSAdminBDModel.FK_Contratos_Funciones", "Funciones", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Contratos_Personas", "Personas")]
        public Personas Personas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Contratos_Personas", "Personas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Contratos_Personas", "Personas").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Personas> PersonasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Contratos_Personas", "Personas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Personas>("CSAdminBDModel.FK_Contratos_Personas", "Personas", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Contratos_SituacionesProfesionales", "SituacionesProfesionales")]
        public SituacionesProfesionales SituacionesProfesionales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SituacionesProfesionales>("CSAdminBDModel.FK_Contratos_SituacionesProfesionales", "SituacionesProfesionales").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SituacionesProfesionales>("CSAdminBDModel.FK_Contratos_SituacionesProfesionales", "SituacionesProfesionales").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SituacionesProfesionales> SituacionesProfesionalesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SituacionesProfesionales>("CSAdminBDModel.FK_Contratos_SituacionesProfesionales", "SituacionesProfesionales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SituacionesProfesionales>("CSAdminBDModel.FK_Contratos_SituacionesProfesionales", "SituacionesProfesionales", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSAdminBDModel", Name="Equipos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipos : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Equipos.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="ubicacion">Valor inicial de la propiedad Ubicacion.</param>
        /// <param name="localidadId">Valor inicial de la propiedad LocalidadId.</param>
        /// <param name="coordinadoId">Valor inicial de la propiedad CoordinadoId.</param>
        public static Equipos CreateEquipos(global::System.String id, global::System.String ubicacion, global::System.Int32 localidadId, global::System.Int32 coordinadoId)
        {
            Equipos equipos = new Equipos();
            equipos.Id = id;
            equipos.Ubicacion = ubicacion;
            equipos.LocalidadId = localidadId;
            equipos.CoordinadoId = coordinadoId;
            return equipos;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ubicacion
        {
            get
            {
                return _Ubicacion;
            }
            set
            {
                OnUbicacionChanging(value);
                ReportPropertyChanging("Ubicacion");
                _Ubicacion = StructuralObject.SetValidValue(value, false, "Ubicacion");
                ReportPropertyChanged("Ubicacion");
                OnUbicacionChanged();
            }
        }
        private global::System.String _Ubicacion;
        partial void OnUbicacionChanging(global::System.String value);
        partial void OnUbicacionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocalidadId
        {
            get
            {
                return _LocalidadId;
            }
            set
            {
                OnLocalidadIdChanging(value);
                ReportPropertyChanging("LocalidadId");
                _LocalidadId = StructuralObject.SetValidValue(value, "LocalidadId");
                ReportPropertyChanged("LocalidadId");
                OnLocalidadIdChanged();
            }
        }
        private global::System.Int32 _LocalidadId;
        partial void OnLocalidadIdChanging(global::System.Int32 value);
        partial void OnLocalidadIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Correo
        {
            get
            {
                return _Correo;
            }
            set
            {
                OnCorreoChanging(value);
                ReportPropertyChanging("Correo");
                _Correo = StructuralObject.SetValidValue(value, true, "Correo");
                ReportPropertyChanged("Correo");
                OnCorreoChanged();
            }
        }
        private global::System.String _Correo;
        partial void OnCorreoChanging(global::System.String value);
        partial void OnCorreoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contra
        {
            get
            {
                return _Contra;
            }
            set
            {
                OnContraChanging(value);
                ReportPropertyChanging("Contra");
                _Contra = StructuralObject.SetValidValue(value, true, "Contra");
                ReportPropertyChanged("Contra");
                OnContraChanged();
            }
        }
        private global::System.String _Contra;
        partial void OnContraChanging(global::System.String value);
        partial void OnContraChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Telefono
        {
            get
            {
                return _Telefono;
            }
            set
            {
                OnTelefonoChanging(value);
                ReportPropertyChanging("Telefono");
                _Telefono = StructuralObject.SetValidValue(value, "Telefono");
                ReportPropertyChanged("Telefono");
                OnTelefonoChanged();
            }
        }
        private Nullable<global::System.Decimal> _Telefono;
        partial void OnTelefonoChanging(Nullable<global::System.Decimal> value);
        partial void OnTelefonoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoordinadoId
        {
            get
            {
                return _CoordinadoId;
            }
            set
            {
                OnCoordinadoIdChanging(value);
                ReportPropertyChanging("CoordinadoId");
                _CoordinadoId = StructuralObject.SetValidValue(value, "CoordinadoId");
                ReportPropertyChanged("CoordinadoId");
                OnCoordinadoIdChanged();
            }
        }
        private global::System.Int32 _CoordinadoId;
        partial void OnCoordinadoIdChanging(global::System.Int32 value);
        partial void OnCoordinadoIdChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Contratos_Equipos", "Contratos")]
        public EntityCollection<Contratos> Contratos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contratos>("CSAdminBDModel.FK_Contratos_Equipos", "Contratos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contratos>("CSAdminBDModel.FK_Contratos_Equipos", "Contratos", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Equipos_Localidades", "Localidades")]
        public Localidades Localidades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Localidades>("CSAdminBDModel.FK_Equipos_Localidades", "Localidades").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Localidades>("CSAdminBDModel.FK_Equipos_Localidades", "Localidades").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Localidades> LocalidadesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Localidades>("CSAdminBDModel.FK_Equipos_Localidades", "Localidades");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Localidades>("CSAdminBDModel.FK_Equipos_Localidades", "Localidades", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Equipos_Personas", "Personas")]
        public Personas Personas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Equipos_Personas", "Personas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Equipos_Personas", "Personas").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Personas> PersonasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Equipos_Personas", "Personas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Personas>("CSAdminBDModel.FK_Equipos_Personas", "Personas", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSAdminBDModel", Name="Funciones")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Funciones : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Funciones.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="funcion">Valor inicial de la propiedad Funcion.</param>
        public static Funciones CreateFunciones(global::System.String id, global::System.String funcion)
        {
            Funciones funciones = new Funciones();
            funciones.Id = id;
            funciones.Funcion = funcion;
            return funciones;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Funcion
        {
            get
            {
                return _Funcion;
            }
            set
            {
                OnFuncionChanging(value);
                ReportPropertyChanging("Funcion");
                _Funcion = StructuralObject.SetValidValue(value, false, "Funcion");
                ReportPropertyChanged("Funcion");
                OnFuncionChanged();
            }
        }
        private global::System.String _Funcion;
        partial void OnFuncionChanging(global::System.String value);
        partial void OnFuncionChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Contratos_Funciones", "Contratos")]
        public EntityCollection<Contratos> Contratos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contratos>("CSAdminBDModel.FK_Contratos_Funciones", "Contratos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contratos>("CSAdminBDModel.FK_Contratos_Funciones", "Contratos", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSAdminBDModel", Name="Inasistencias")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inasistencias : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Inasistencias.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="idPersona">Valor inicial de la propiedad IdPersona.</param>
        /// <param name="desde">Valor inicial de la propiedad Desde.</param>
        public static Inasistencias CreateInasistencias(global::System.Int32 id, global::System.Int32 idPersona, global::System.DateTime desde)
        {
            Inasistencias inasistencias = new Inasistencias();
            inasistencias.Id = id;
            inasistencias.IdPersona = idPersona;
            inasistencias.Desde = desde;
            return inasistencias;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPersona
        {
            get
            {
                return _IdPersona;
            }
            set
            {
                if (_IdPersona != value)
                {
                    OnIdPersonaChanging(value);
                    ReportPropertyChanging("IdPersona");
                    _IdPersona = StructuralObject.SetValidValue(value, "IdPersona");
                    ReportPropertyChanged("IdPersona");
                    OnIdPersonaChanged();
                }
            }
        }
        private global::System.Int32 _IdPersona;
        partial void OnIdPersonaChanging(global::System.Int32 value);
        partial void OnIdPersonaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Desde
        {
            get
            {
                return _Desde;
            }
            set
            {
                OnDesdeChanging(value);
                ReportPropertyChanging("Desde");
                _Desde = StructuralObject.SetValidValue(value, "Desde");
                ReportPropertyChanged("Desde");
                OnDesdeChanged();
            }
        }
        private global::System.DateTime _Desde;
        partial void OnDesdeChanging(global::System.DateTime value);
        partial void OnDesdeChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Hasta
        {
            get
            {
                return _Hasta;
            }
            set
            {
                OnHastaChanging(value);
                ReportPropertyChanging("Hasta");
                _Hasta = StructuralObject.SetValidValue(value, "Hasta");
                ReportPropertyChanged("Hasta");
                OnHastaChanged();
            }
        }
        private Nullable<global::System.DateTime> _Hasta;
        partial void OnHastaChanging(Nullable<global::System.DateTime> value);
        partial void OnHastaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Motivo
        {
            get
            {
                return _Motivo;
            }
            set
            {
                OnMotivoChanging(value);
                ReportPropertyChanging("Motivo");
                _Motivo = StructuralObject.SetValidValue(value, true, "Motivo");
                ReportPropertyChanged("Motivo");
                OnMotivoChanged();
            }
        }
        private global::System.String _Motivo;
        partial void OnMotivoChanging(global::System.String value);
        partial void OnMotivoChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Inasistencias_Personas", "Personas")]
        public Personas Personas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Inasistencias_Personas", "Personas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Inasistencias_Personas", "Personas").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Personas> PersonasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Inasistencias_Personas", "Personas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Personas>("CSAdminBDModel.FK_Inasistencias_Personas", "Personas", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSAdminBDModel", Name="Localidades")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Localidades : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Localidades.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="localidad">Valor inicial de la propiedad Localidad.</param>
        public static Localidades CreateLocalidades(global::System.Int32 id, global::System.String localidad)
        {
            Localidades localidades = new Localidades();
            localidades.Id = id;
            localidades.Localidad = localidad;
            return localidades;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Localidad
        {
            get
            {
                return _Localidad;
            }
            set
            {
                OnLocalidadChanging(value);
                ReportPropertyChanging("Localidad");
                _Localidad = StructuralObject.SetValidValue(value, false, "Localidad");
                ReportPropertyChanged("Localidad");
                OnLocalidadChanged();
            }
        }
        private global::System.String _Localidad;
        partial void OnLocalidadChanging(global::System.String value);
        partial void OnLocalidadChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Equipos_Localidades", "Equipos")]
        public EntityCollection<Equipos> Equipos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equipos>("CSAdminBDModel.FK_Equipos_Localidades", "Equipos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equipos>("CSAdminBDModel.FK_Equipos_Localidades", "Equipos", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSAdminBDModel", Name="Personas")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personas : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Personas.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="dni">Valor inicial de la propiedad Dni.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="apellido">Valor inicial de la propiedad Apellido.</param>
        /// <param name="direccion">Valor inicial de la propiedad Direccion.</param>
        /// <param name="baja">Valor inicial de la propiedad Baja.</param>
        public static Personas CreatePersonas(global::System.Int32 id, global::System.Decimal dni, global::System.String nombre, global::System.String apellido, global::System.String direccion, global::System.Boolean baja)
        {
            Personas personas = new Personas();
            personas.Id = id;
            personas.Dni = dni;
            personas.Nombre = nombre;
            personas.Apellido = apellido;
            personas.Direccion = direccion;
            personas.Baja = baja;
            return personas;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Dni
        {
            get
            {
                return _Dni;
            }
            set
            {
                OnDniChanging(value);
                ReportPropertyChanging("Dni");
                _Dni = StructuralObject.SetValidValue(value, "Dni");
                ReportPropertyChanged("Dni");
                OnDniChanged();
            }
        }
        private global::System.Decimal _Dni;
        partial void OnDniChanging(global::System.Decimal value);
        partial void OnDniChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cuit
        {
            get
            {
                return _Cuit;
            }
            set
            {
                OnCuitChanging(value);
                ReportPropertyChanging("Cuit");
                _Cuit = StructuralObject.SetValidValue(value, "Cuit");
                ReportPropertyChanged("Cuit");
                OnCuitChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cuit;
        partial void OnCuitChanging(Nullable<global::System.Decimal> value);
        partial void OnCuitChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false, "Nombre");
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apellido
        {
            get
            {
                return _Apellido;
            }
            set
            {
                OnApellidoChanging(value);
                ReportPropertyChanging("Apellido");
                _Apellido = StructuralObject.SetValidValue(value, false, "Apellido");
                ReportPropertyChanged("Apellido");
                OnApellidoChanged();
            }
        }
        private global::System.String _Apellido;
        partial void OnApellidoChanging(global::System.String value);
        partial void OnApellidoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Direccion
        {
            get
            {
                return _Direccion;
            }
            set
            {
                OnDireccionChanging(value);
                ReportPropertyChanging("Direccion");
                _Direccion = StructuralObject.SetValidValue(value, false, "Direccion");
                ReportPropertyChanged("Direccion");
                OnDireccionChanged();
            }
        }
        private global::System.String _Direccion;
        partial void OnDireccionChanging(global::System.String value);
        partial void OnDireccionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Correo
        {
            get
            {
                return _Correo;
            }
            set
            {
                OnCorreoChanging(value);
                ReportPropertyChanging("Correo");
                _Correo = StructuralObject.SetValidValue(value, true, "Correo");
                ReportPropertyChanged("Correo");
                OnCorreoChanged();
            }
        }
        private global::System.String _Correo;
        partial void OnCorreoChanging(global::System.String value);
        partial void OnCorreoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Baja
        {
            get
            {
                return _Baja;
            }
            set
            {
                OnBajaChanging(value);
                ReportPropertyChanging("Baja");
                _Baja = StructuralObject.SetValidValue(value, "Baja");
                ReportPropertyChanged("Baja");
                OnBajaChanged();
            }
        }
        private global::System.Boolean _Baja;
        partial void OnBajaChanging(global::System.Boolean value);
        partial void OnBajaChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Contratos_Personas", "Contratos")]
        public EntityCollection<Contratos> Contratos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contratos>("CSAdminBDModel.FK_Contratos_Personas", "Contratos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contratos>("CSAdminBDModel.FK_Contratos_Personas", "Contratos", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Equipos_Personas", "Equipos")]
        public EntityCollection<Equipos> Equipos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equipos>("CSAdminBDModel.FK_Equipos_Personas", "Equipos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equipos>("CSAdminBDModel.FK_Equipos_Personas", "Equipos", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Inasistencias_Personas", "Inasistencias")]
        public EntityCollection<Inasistencias> Inasistencias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inasistencias>("CSAdminBDModel.FK_Inasistencias_Personas", "Inasistencias");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inasistencias>("CSAdminBDModel.FK_Inasistencias_Personas", "Inasistencias", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_PersonasTel_Personas", "PersonasTel")]
        public EntityCollection<PersonasTel> PersonasTel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonasTel>("CSAdminBDModel.FK_PersonasTel_Personas", "PersonasTel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonasTel>("CSAdminBDModel.FK_PersonasTel_Personas", "PersonasTel", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Usuarios_Personas", "Usuarios")]
        public Usuarios Usuarios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuarios>("CSAdminBDModel.FK_Usuarios_Personas", "Usuarios").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuarios>("CSAdminBDModel.FK_Usuarios_Personas", "Usuarios").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usuarios> UsuariosReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuarios>("CSAdminBDModel.FK_Usuarios_Personas", "Usuarios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usuarios>("CSAdminBDModel.FK_Usuarios_Personas", "Usuarios", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSAdminBDModel", Name="PersonasTel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonasTel : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto PersonasTel.
        /// </summary>
        /// <param name="idPersona">Valor inicial de la propiedad IdPersona.</param>
        /// <param name="tipo">Valor inicial de la propiedad Tipo.</param>
        /// <param name="numero">Valor inicial de la propiedad Numero.</param>
        public static PersonasTel CreatePersonasTel(global::System.Int32 idPersona, global::System.String tipo, global::System.Decimal numero)
        {
            PersonasTel personasTel = new PersonasTel();
            personasTel.IdPersona = idPersona;
            personasTel.Tipo = tipo;
            personasTel.Numero = numero;
            return personasTel;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPersona
        {
            get
            {
                return _IdPersona;
            }
            set
            {
                if (_IdPersona != value)
                {
                    OnIdPersonaChanging(value);
                    ReportPropertyChanging("IdPersona");
                    _IdPersona = StructuralObject.SetValidValue(value, "IdPersona");
                    ReportPropertyChanged("IdPersona");
                    OnIdPersonaChanged();
                }
            }
        }
        private global::System.Int32 _IdPersona;
        partial void OnIdPersonaChanging(global::System.Int32 value);
        partial void OnIdPersonaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tipo
        {
            get
            {
                return _Tipo;
            }
            set
            {
                if (_Tipo != value)
                {
                    OnTipoChanging(value);
                    ReportPropertyChanging("Tipo");
                    _Tipo = StructuralObject.SetValidValue(value, false, "Tipo");
                    ReportPropertyChanged("Tipo");
                    OnTipoChanged();
                }
            }
        }
        private global::System.String _Tipo;
        partial void OnTipoChanging(global::System.String value);
        partial void OnTipoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Numero
        {
            get
            {
                return _Numero;
            }
            set
            {
                OnNumeroChanging(value);
                ReportPropertyChanging("Numero");
                _Numero = StructuralObject.SetValidValue(value, "Numero");
                ReportPropertyChanged("Numero");
                OnNumeroChanged();
            }
        }
        private global::System.Decimal _Numero;
        partial void OnNumeroChanging(global::System.Decimal value);
        partial void OnNumeroChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_PersonasTel_Personas", "Personas")]
        public Personas Personas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_PersonasTel_Personas", "Personas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_PersonasTel_Personas", "Personas").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Personas> PersonasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_PersonasTel_Personas", "Personas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Personas>("CSAdminBDModel.FK_PersonasTel_Personas", "Personas", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSAdminBDModel", Name="SituacionesProfesionales")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SituacionesProfesionales : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto SituacionesProfesionales.
        /// </summary>
        /// <param name="cargoAbrev">Valor inicial de la propiedad CargoAbrev.</param>
        /// <param name="cargo">Valor inicial de la propiedad Cargo.</param>
        /// <param name="condicionAbrev">Valor inicial de la propiedad CondicionAbrev.</param>
        /// <param name="condicion">Valor inicial de la propiedad Condicion.</param>
        public static SituacionesProfesionales CreateSituacionesProfesionales(global::System.String cargoAbrev, global::System.String cargo, global::System.String condicionAbrev, global::System.String condicion)
        {
            SituacionesProfesionales situacionesProfesionales = new SituacionesProfesionales();
            situacionesProfesionales.CargoAbrev = cargoAbrev;
            situacionesProfesionales.Cargo = cargo;
            situacionesProfesionales.CondicionAbrev = condicionAbrev;
            situacionesProfesionales.Condicion = condicion;
            return situacionesProfesionales;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CargoAbrev
        {
            get
            {
                return _CargoAbrev;
            }
            set
            {
                if (_CargoAbrev != value)
                {
                    OnCargoAbrevChanging(value);
                    ReportPropertyChanging("CargoAbrev");
                    _CargoAbrev = StructuralObject.SetValidValue(value, false, "CargoAbrev");
                    ReportPropertyChanged("CargoAbrev");
                    OnCargoAbrevChanged();
                }
            }
        }
        private global::System.String _CargoAbrev;
        partial void OnCargoAbrevChanging(global::System.String value);
        partial void OnCargoAbrevChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cargo
        {
            get
            {
                return _Cargo;
            }
            set
            {
                OnCargoChanging(value);
                ReportPropertyChanging("Cargo");
                _Cargo = StructuralObject.SetValidValue(value, false, "Cargo");
                ReportPropertyChanged("Cargo");
                OnCargoChanged();
            }
        }
        private global::System.String _Cargo;
        partial void OnCargoChanging(global::System.String value);
        partial void OnCargoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CondicionAbrev
        {
            get
            {
                return _CondicionAbrev;
            }
            set
            {
                if (_CondicionAbrev != value)
                {
                    OnCondicionAbrevChanging(value);
                    ReportPropertyChanging("CondicionAbrev");
                    _CondicionAbrev = StructuralObject.SetValidValue(value, false, "CondicionAbrev");
                    ReportPropertyChanged("CondicionAbrev");
                    OnCondicionAbrevChanged();
                }
            }
        }
        private global::System.String _CondicionAbrev;
        partial void OnCondicionAbrevChanging(global::System.String value);
        partial void OnCondicionAbrevChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Condicion
        {
            get
            {
                return _Condicion;
            }
            set
            {
                OnCondicionChanging(value);
                ReportPropertyChanging("Condicion");
                _Condicion = StructuralObject.SetValidValue(value, false, "Condicion");
                ReportPropertyChanged("Condicion");
                OnCondicionChanged();
            }
        }
        private global::System.String _Condicion;
        partial void OnCondicionChanging(global::System.String value);
        partial void OnCondicionChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Contratos_SituacionesProfesionales", "Contratos")]
        public EntityCollection<Contratos> Contratos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contratos>("CSAdminBDModel.FK_Contratos_SituacionesProfesionales", "Contratos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contratos>("CSAdminBDModel.FK_Contratos_SituacionesProfesionales", "Contratos", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CSAdminBDModel", Name="Usuarios")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usuarios : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Usuarios.
        /// </summary>
        /// <param name="idPersona">Valor inicial de la propiedad IdPersona.</param>
        /// <param name="usuario">Valor inicial de la propiedad Usuario.</param>
        /// <param name="contra">Valor inicial de la propiedad Contra.</param>
        /// <param name="rol">Valor inicial de la propiedad Rol.</param>
        public static Usuarios CreateUsuarios(global::System.Int32 idPersona, global::System.String usuario, global::System.String contra, global::System.String rol)
        {
            Usuarios usuarios = new Usuarios();
            usuarios.IdPersona = idPersona;
            usuarios.Usuario = usuario;
            usuarios.Contra = contra;
            usuarios.Rol = rol;
            return usuarios;
        }

        #endregion

        #region Propiedades simples
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPersona
        {
            get
            {
                return _IdPersona;
            }
            set
            {
                if (_IdPersona != value)
                {
                    OnIdPersonaChanging(value);
                    ReportPropertyChanging("IdPersona");
                    _IdPersona = StructuralObject.SetValidValue(value, "IdPersona");
                    ReportPropertyChanged("IdPersona");
                    OnIdPersonaChanged();
                }
            }
        }
        private global::System.Int32 _IdPersona;
        partial void OnIdPersonaChanging(global::System.Int32 value);
        partial void OnIdPersonaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Usuario
        {
            get
            {
                return _Usuario;
            }
            set
            {
                OnUsuarioChanging(value);
                ReportPropertyChanging("Usuario");
                _Usuario = StructuralObject.SetValidValue(value, false, "Usuario");
                ReportPropertyChanged("Usuario");
                OnUsuarioChanged();
            }
        }
        private global::System.String _Usuario;
        partial void OnUsuarioChanging(global::System.String value);
        partial void OnUsuarioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contra
        {
            get
            {
                return _Contra;
            }
            set
            {
                OnContraChanging(value);
                ReportPropertyChanging("Contra");
                _Contra = StructuralObject.SetValidValue(value, false, "Contra");
                ReportPropertyChanged("Contra");
                OnContraChanged();
            }
        }
        private global::System.String _Contra;
        partial void OnContraChanging(global::System.String value);
        partial void OnContraChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rol
        {
            get
            {
                return _Rol;
            }
            set
            {
                OnRolChanging(value);
                ReportPropertyChanging("Rol");
                _Rol = StructuralObject.SetValidValue(value, false, "Rol");
                ReportPropertyChanged("Rol");
                OnRolChanged();
            }
        }
        private global::System.String _Rol;
        partial void OnRolChanging(global::System.String value);
        partial void OnRolChanged();

        #endregion

        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CSAdminBDModel", "FK_Usuarios_Personas", "Personas")]
        public Personas Personas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Usuarios_Personas", "Personas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Usuarios_Personas", "Personas").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Personas> PersonasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Personas>("CSAdminBDModel.FK_Usuarios_Personas", "Personas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Personas>("CSAdminBDModel.FK_Usuarios_Personas", "Personas", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
