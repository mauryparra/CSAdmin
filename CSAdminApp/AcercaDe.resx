<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="mainPicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>